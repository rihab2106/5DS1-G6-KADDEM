pipeline {
    agent any
    tools {
        maven 'M2_HOME'
    }
    stages {
        stage('Build Maven') {
            steps {
                checkout([$class: 'GitSCM', branches: [[name: '*/moduletest']], extensions: [], userRemoteConfigs: [[url: 'https://github.com/rihab2106/5DS1-G6-KADDEM']]])
                sh 'mvn clean install'
            }
        }
        stage('Build docker image'){
            steps{
                script{
                    sh 'docker build -t rihabbns/docker-integration .'
                }

            }
        }
        stage('push image to dockerHub'){
            steps{
                script{
                    withCredentials([string(credentialsId: 'dockerhubpwd', variable: 'dockerhubpwd')]) {
                     sh 'docker login -u rihabbns -p ${dockerhubpwd}'
                      }


                    sh 'docker push rihabbns/docker-integration'
                }
            }
        }
        stage('SonarQube Analysis') {
                   steps{
                       withSonarQubeEnv('sonarqube'){
                           sh "mvn sonar:sonar"
                       }
                   }

                }
        stage('Upload artifacts to nexus'){
                               steps{
                                   sh 'mvn deploy:deploy-file -Durl=http://172.10.0.3:8081/repository/project-release -Dfile=target/devops-integration.jar -DgroupId=tn.esprit.spring -DartifactId=kaddem -Dversion=0.0.1 -Dpackaging=jar -DrepositoryId=project-release -DgeneratePom=false'
                     } }
        stage('Unit Tests') {
                                 steps {
                                     // Run your unit tests using Maven and specify the test class
                                     sh 'mvn test -Dtest=EquipeTest'
                                 }
                             }
        stage('test grafana '){
                                         steps{


                                              sh 'curl -I http://172.10.0.3:3000'

                                           }
                                      }


    }
}
